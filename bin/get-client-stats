#!/usr/bin/ruby

#This is just a simple script to grab stat info from a client.
#
#==Usage
#get-client-stats address [port] [keyfile]

require 'statmonitor'

def create_message(private_key)
  encrypted = private_key.private_encrypt(Time.new.to_i.to_s)
  checksum = Digest::MD5.digest(encrypted)
  Base64.encode64(checksum + encrypted).gsub(/\n/, "")
end

def get_data(address, port, key)
  TCPSocket.open(address, port) do |client|
    client.write(create_message(key))
    #Write EOT.
    client.write("\004")
    wrapper = StatMonitor::EOTSocketWrapper.new(client)
    return wrapper.read_until_eot(3)
  end
end

if ARGV.length < 1
  puts "Usage:"
  puts "    get-client-stats address [port] [keyfile]"
  exit 1
end

address = ARGV[0]
port = ARGV[1] || 9445
keyfile = ARGV[2] || '/etc/stat-monitor/private_key.pem'

private_key = OpenSSL::PKey::RSA.new(File.read(keyfile))

json = get_data(address, port, private_key)

unless json
  puts "No response received."
  exit
end

data = JSON.parse(json)

unless data['Status'] == 0
  puts "Received error from server: #{data['Message']}"
  exit 1
end

print 'Processors: '
puts data['Processors']

puts 'Memory:'
data['Memory'].each_pair do |key, value|
  print "  #{key}: "
  print value
  print '%' if /Free/.match key
  puts
end

puts 'Disks: '
data['Disks'].each_pair do |key, value|
  puts "  #{key}: #{value}%"
end

loads = data['Load']

puts 'Load:'
puts "  5-minute:  #{loads[0]}%"
puts "  10-minute: #{loads[1]}%"
puts "  15-minute: #{loads[2]}%"

puts 'Users:'
data['Users'].each do |user|
  puts "  #{user}"
end

